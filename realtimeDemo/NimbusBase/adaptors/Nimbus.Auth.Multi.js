// Generated by CoffeeScript 1.6.3
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Nimbus.Auth.Multi = {
    authenticate_service: function(service) {
      var isArray, key, user_email_scope, val, x, _ref;
      log("authenticate a single service", service);
      isArray = Array.isArray || function(value) {
        return {}.toString.call(value) === '[object Array]';
      };
      if ((this.sync_services != null) && (this.sync_services[service] != null)) {
        x = this.sync_services[service];
        x["service"] = service;
        if (service === "Dropbox") {
          Nimbus.Auth.setup(x);
        }
        if (service === "GDrive") {
          user_email_scope = 'https://www.googleapis.com/auth/userinfo.email';
          if (isArray(x.scope)) {
            if (__indexOf.call(x.scope, user_email_scope) < 0) {
              x.scope.push(user_email_scope);
            }
          } else {
            x.scope = [x.scope, user_email_scope];
          }
          x.scope = x.scope.join(" ");
          if (x.client_secret != null) {
            Nimbus.Auth.setup(x);
          } else {
            Nimbus.Auth.setup(x);
          }
        }
        _ref = Nimbus.dictModel;
        for (key in _ref) {
          val = _ref[key];
          Nimbus.Model.service_setup(val);
        }
        Nimbus.Auth.initialize();
        return Nimbus.Auth.authorize();
      }
    },
    initialize_service: function() {
      log("initializing service");
      return Nimbus.Auth.reinitialize();
    }
  };

}).call(this);
