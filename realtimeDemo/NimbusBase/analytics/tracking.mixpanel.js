// Generated by CoffeeScript 1.6.3
(function() {
  var mixpanel_token;

  mixpanel_token = "57da9d172e8c2000bca77d9ebb935752";

  Nimbus.track = {
    send_people_request: function(x) {
      var encoded, xhr,
        _this = this;
      xhr = new XMLHttpRequest();
      log(JSON.stringify(x));
      encoded = Base64.encode(JSON.stringify(x));
      window.data = "data=" + encoded;
      xhr.open("POST", "http://api.mixpanel.com/engage");
      xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      xhr.onreadystatechange = function(status, response) {
        if (xhr.readyState === 4) {
          try {
            log("xhr", xhr);
            log("mixpanel response done");
            return log("response: ", xhr.response);
          } catch (_error) {}
        }
      };
      xhr.send(data);
      return window.xhr = xhr;
    },
    registered_user: function() {
      var email;
      log("registered user");
      if (Nimbus.Auth.service === "Dropbox") {
        Nimbus.Client.Dropbox.getAccountInfo(function(info) {
          var email, first, last, n, x, _ref;
          n = info.display_name;
          _ref = n.split(" "), first = _ref[0], last = _ref[1];
          email = "";
          if (info.email != null) {
            email = info.email;
          }
          x = {
            $set: {
              $first_name: first,
              $last_name: last,
              $app: Nimbus.Auth.app_name,
              $service: Nimbus.Auth.service,
              $email: email,
              $url: window.location.href
            },
            $token: mixpanel_token,
            $distinct_id: email
          };
          log(x);
          return Nimbus.track.send_people_request(x);
        });
      }
      if (Nimbus.Auth.service === "GDrive") {
        email = Nimbus.Client.GDrive.get_user_email();
        return Nimbus.Client.GDrive.get_current_user(function(info) {
          var first, last, n, x, _ref;
          n = info.name;
          _ref = n.split(" "), first = _ref[0], last = _ref[1];
          x = {
            $set: {
              $first_name: first,
              $last_name: last,
              $app: Nimbus.Auth.app_name,
              $service: Nimbus.Auth.service,
              $email: email,
              $url: window.location.href
            },
            $token: mixpanel_token,
            $distinct_id: email
          };
          log(x);
          return Nimbus.track.send_people_request(x);
        });
      }
    },
    report_storage_stat: function() {
      var last_reported_date, now;
      log("report storage stat");
      now = new Date();
      if (localStorage["last_reported_date"] != null) {
        last_reported_date = localStorage["last_reported_date"];
      }
      if (last_reported_date) {
        if (now - last_reported_date > 86400000) {
          log("start sending data");
        }
        return localStorage["last_reported_date"] = now;
      } else {
        return log("start sending data");
      }
    }
  };

  this.Nimbus = Nimbus;

}).call(this);
