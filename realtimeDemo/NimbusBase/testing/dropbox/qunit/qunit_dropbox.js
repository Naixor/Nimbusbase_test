// Generated by CoffeeScript 1.6.3
module("Dropbox QUnit");

window.Entry3 = Nimbus.Model.setup("Entry3", ["note", "comment"]);

asyncTest("Auto Login(12s)", function() {
  return Nimbus.Auth.set_app_ready(function() {
    if (!Nimbus.Auth.authorized()) {
      Nimbus.Auth.authorize("Dropbox");
    }
    equal(Nimbus.Auth.authorized(), true, "have  been  login");
    Entry3.sync_all(function() {
      return start();
    });
  });
});

asyncTest("Set Model and  Sync(12s)", 1, function() {
  return Entry3.sync_all(function() {
    ok(Entry3, "Entry3  have been  setup");
    return start();
  });
});

asyncTest("clear old objects (8s)", function() {
  Entry3.destroyAll();
  return setTimeout(function() {
    return Nimbus.Client.Dropbox.send_request('GET', 'https://api.dropbox.com/1/metadata/sandbox/unit_test/Entry3', '', function(data) {
      var ob;
      ob = data.contents.length;
      QUnit.equal(ob, 0, "Entry3 is empty now, will check later");
      return start();
    });
  }, 5000);
});

asyncTest("add 5 objects", function() {
  Entry3.create({
    "note": "note1",
    "comment": "comment1"
  });
  Entry3.create({
    "note": "note2",
    "comment": "comment2"
  });
  Entry3.create({
    "note": "note3",
    "comment": "comment3"
  });
  Entry3.create({
    "note": "note4",
    "comment": "comment4"
  });
  Entry3.create({
    "note": "note5",
    "comment": "comment5"
  });
  setTimeout(function() {
    Nimbus.Client.Dropbox.send_request('GET', 'https://api.dropbox.com/1/metadata/sandbox/unit_test/Entry3', '', function(data) {
      var ob;
      ob = data.contents.length;
      QUnit.equal(ob, 5, "Entry3 have added 5 objects");
      return start();
    });
  }, 7000);
});

asyncTest("delete an objects(5s)", function() {
  var a_id, aa, path, testCall2;
  aa = window.Entry3.findByAttribute("note", "note1");
  a_id = aa.id;
  path = "/unit_test/Entry3/" + a_id + ".txt";
  testCall2 = function() {
    return Nimbus.Client.Dropbox.send_request('GET', 'https://api.dropbox.com/1/metadata/sandbox/unit_test/Entry3', '', function(data) {
      var ob;
      ob = data.contents.length;
      return QUnit.equal(ob, 4, "Entry3 is  4 objects  left now");
    });
  };
  Nimbus.Client.Dropbox.getFileContents(path, function(data) {
    var ob;
    ob = data;
    QUnit.equal(ob.id, a_id, "find the item in gdrive");
    aa.destroy();
    return start();
  });
});

asyncTest("Edit objects(5s)", 2, function() {
  var a_id, aaa, path;
  stop();
  aaa = window.Entry3.findByAttribute("note", "note2");
  a_id = aaa.id;
  path = "/unit_test/Entry3/" + a_id + ".txt";
  Nimbus.Client.Dropbox.getFileContents(path, function(data) {
    var ob;
    ob = data;
    QUnit.equal(ob.id, a_id, "find the item in dropbox");
    aaa.note = "note2222";
    aaa.save();
    setTimeout(function() {
      return Nimbus.Client.Dropbox.getFileContents(path, function(data) {
        QUnit.equal(data.note, "note2222", "find the item in gdrive");
        return start();
      });
    }, 4000);
    return start();
  });
  return null;
});
